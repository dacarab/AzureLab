{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccount": {
      "type": "string"
    },
    "DomainControllerDscScript": {
      "type": "string"
    },
    "DomainControllerDscFunction": {
      "type": "string"
    },
    "DomainControllerDscUri": {
      "type": "string"
    },
    /*    "DomainContollerDscSasToken": {
          "type": "string"
        },*/
    "LabName": {
      "type": "string"
    },
    "SplunkSetupScript": {
      "type": "string"
    },
    "SplunkSetupScriptUrl": {
      "type": "string"
    },
    "LabAdmin": {
      "type": "string",
      "defaultValue": "crapmin",
      "minLength": 1
    },
    "LabPassword": {
      "type": "securestring"
    },
    "ManagementIP": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "LabAddressSpace": "10.255.255.0/24",
    "LabSubnetName": "[concat(Parameters('LabName'), '_Subnet')]",
    "LabSubnet": "10.255.255.240/28",
    "LabVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'vnLab')]",
    "LabSubnetID": "[concat(variables('LabVnetID'), '/subnets/', variables('LabSubnetName'))]",
    "DomainControllerName": "dc01",
    "DomainControllerNic": "DomainControlerNic",
    "SplunkName": "splunk01",
    "SplunkNic": "SplunkNic",
    "SplunkPIP": "SplunkPIP",
    "DomainControllerPIP" : "DomainControllerPIP",
    "LabSecurityGroup": "LabSecurityGroup",
    "SplunkSetupCmd": "sh splunk_setup.sh"
  },
  "resources": [{
      "name": "vnLab",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('LabSecurityGroup'))]"
      ],
      "tags": {
        "displayName": "Virtual Network for Chef Lab"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('LabAddressSpace')]"
          ]
        },
        "subnets": [{
          "name": "[variables('LabSubnetName')]",
          "properties": {
            "addressPrefix": "[variables('LabSubnet')]",
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('LabSecurityGroup'))]"
            }
          }
        }]
      }
    },
    {
      "name": "DomainControllerPIP",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "Public IP for Windows VM"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('DomainControllerName'), uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "name": "[variables('DomainControllerNic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'vnLab')]",
        "[concat('Microsoft.Network/publicIPAddresses/','DomainControllerPIP')]"
      ],
      "tags": {
        "displayName": "Virtual Nic for Windows VM"
      },
      "properties": {
        "ipConfigurations": [{
          "name": "ipconfig1",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
              "id": "[variables('LabSubnetID')]"
            },
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'DomainControllerPIP')]"
            }
          }
        }]
      }
    },
    {
      "name": "[variables('DomainControllerName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('DomainControllerNic'))]"
      ],
      "tags": {
        "displayName": "Windows Virtual Machine"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A1"
        },
        "osProfile": {
          "computerName": "[variables('DomainControllerName')]",
          "adminUsername": "[parameters('LabAdmin')]",
          "adminPassword": "[parameters('labPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "vmWinOSDisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/DomainControllerOS.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [{
            "lun": 0,
            "name": "ActiveDirctoryDisk",
            "createOption": "Empty",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/ActiveDirectoryDisk.vhd')]"
            },
            "caching": "ReadOnly",
            "diskSizeGB": 1023
          }]
        },
        "networkProfile": {
          "networkInterfaces": [{
            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('DomainControllerNic'))]"
          }]
        }
      },
      "resources": [{
        "name": "windows01_dsc",
        "type": "extensions",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('DomainControllerName'))]"
        ],
        "tags": {
          "displayName": "Windows01_DSC"
        },
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.20",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "configuration": {
              "url": "[parameters('DomainControllerDscUri')]",
              "script": "[parameters('DomainControllerDscScript')]",
              "function": "[parameters('DomainControllerDscFunction')]"
              //"DomainContollerDscSasToken": "[parameters('DomainContollerDscSasToken')]"
            },
            "configurationArguments": {
              "LabName": "[parameters('LabName')]",
              "AdminCred": {
                "UserName": "[parameters('LabAdmin')]",
                "Password": "PrivateSettingsRef:AdminPassword"
              }
            }
          },
          "protectedSettings": {
            "AdminPassword": "[parameters('LabPassword')]",
            "configurationArguments": {
              //"configurationUrlDomainContollerDscSasToken": "[parameters('DomainContollerDscSasToken')]"
            }
          }
        }
      }]
    },
    {
      "name": "[variables('SplunkNic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'vnLab')]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('SplunkPIP'))]"
      ],
      "tags": {
        "displayName": "Virtual Nic for Linux VM"
      },
      "properties": {
        "ipConfigurations": [{
          "name": "ipconfig1",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
              "id": "[variables('LabSubnetID')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'SplunkPIP')]"
              }
            },
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('SplunkPIP'))]"
            }
          }
        }]
      }
    },
    {
      "name": "[variables('SplunkPIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "Public IP for Splunk Box"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('SplunkName'), uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('LabSecurityGroup')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Network Security Group"
      },
      "properties": {
        "securityRules": [{
            "name": "Allow-SSH-Internal",
            "properties": {
              "description": "Allows SSH traffic from Azure vnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-SSH-External",
            "properties": {
              "description": "Allows SSH traffic from Management IP ",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('ManagementIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTP-External-Port_8000",
            "properties": {
              "description": "Allows HTTP traffic on port 8000",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8000",
              "sourceAddressPrefix": "[parameters('ManagementIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTPS-Internal",
            "properties": {
              "description": "Allows HTTPS traffic on port 443",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTPS-External",
            "properties": {
              "description": "Allows HTTPS traffic on port 443",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "[parameters('ManagementIP')]",
              "access": "Allow",
              "priority": 140,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTP-Event-Collector",
            "properties": {
              "description": "Allows HTTP(S) Event Collector traffic on port 8088",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8088",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-Receiver-TCP",
            "properties": {
              "description": "Allows receiver TCP traffic on port 9997",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9997",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 160,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-Mgmt-From-VNET",
            "properties": {
              "description": "Allows mgmt on port 8089 from VNET only",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8089",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 170,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp-rule",
            "properties": {
              "description": "Allow RDP from Management IP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('ManagementIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 180,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('SplunkName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "splunk-on-ubuntu-14-04-lts",
        "product": "splunk-enterprise-base-image",
        "publisher": "splunk"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "splunk",
            "offer": "splunk-enterprise-base-image",
            "sku": "splunk-on-ubuntu-14-04-lts",
            "version": "1.0.9"
          },
          "osDisk": {
            "name": "osdisk",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/SplunkOS.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [{
              "lun": 0,
              "name": "datadisk1",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/SplunkDataDisk1.vhd')]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 1,
              "name": "datadisk2",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/SplunkDataDisk2.vhd')]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 2,
              "name": "datadisk3",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/SplunkDataDisk3.vhd')]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 3,
              "name": "datadisk4",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccount'), '.blob.core.windows.net/vhds/SplunkDataDisk4.vhd')]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('SplunkName')]",
          "adminUsername": "[parameters('LabAdmin')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": [],
          "adminPassword": "[parameters('labPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [{
            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('SplunkNic'))]"
          }]
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('SplunkNic'))]"
      ],
      "tags": {
        "displayName": "Splunk Virtual Machine"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('SplunkName'), '/SplunkSetup')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('SplunkSetupScriptUrl')]"
          ],
          "commandToExecute": "[variables('SplunkSetupCmd')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('SplunkName'))]"
      ]
    }
  ],
  "outputs": {
    "SplunkServerUrl": {
      "type": "string",
      "value": "[reference(variables('SplunkPIP')).dnsSettings.fqdn]"
    },
    "DomainControllerUrl": {
      "type": "string",
      "value": "[reference('DomainControllerPIP').dnsSettings.fqdn]"
    }

  }
}